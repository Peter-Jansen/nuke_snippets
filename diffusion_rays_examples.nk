set cut_paste_input [stack 0]
version 13.2 v1
BackdropNode {
 inputs 0
 name BackdropNode10
 tile_color 0x232323ff
 note_font_size 42
 selected true
 xpos -8459
 ypos 6356
 bdwidth 547
 bdheight 485
}
BackdropNode {
 inputs 0
 name BackdropNode12
 tile_color 0x232323ff
 note_font_size 42
 selected true
 xpos -9269
 ypos 6290
 bdwidth 669
 bdheight 685
}
push $cut_paste_input
Text2 {
 font_size_toolbar 100
 font_width_toolbar 100
 font_height_toolbar 100
 message "DIFFUSION RAYS"
 old_message {{68 73 70 70 85 83 73 79 78 32 82 65 89 83}
   }
 box {963 869.5 4713 1270.5}
 transforms {{0 2}
   }
 cursor_position 1
 font {{ Arial : Black : ariblk.ttf : 0 }}
 global_font_scale 4
 center {2896 1213.5}
 cursor_initialised true
 initial_cursor_position {{963 1270.5}
   }
 group_animations {{0} imported: 0 selected: items: "root transform/"}
 animation_layers {{1 11 2896 1213.5 0 0 1 1 0 0 0 0}
   }
 name Text1
 selected true
 xpos -8365
 ypos 6406
}
Group {
 name XOR_edge
 selected true
 xpos -8365
 ypos 6430
 addUserKnob {20 User}
 addUserKnob {41 size T Blur1.size}
 addUserKnob {26 ""}
 addUserKnob {26 text l "" +STARTLINE T "A simple XOR edge detect"}
 addUserKnob {26 text_1 l "" +STARTLINE T "Probably grade your alpha to be harder beforehand."}
}
 Input {
  inputs 0
  name Input1
  xpos -641
  ypos -478
 }
 Blur {
  size 10
  name Blur1
  label "\[value size]"
  selected true
  xpos -641
  ypos -396
 }
set N68ee800 [stack 0]
push $N68ee800
 Merge2 {
  inputs 2
  operation xor
  name Merge2
  xpos -641
  ypos -316
 }
 Grade {
  channels alpha
  whitepoint 0.5
  name Grade4
  xpos -641
  ypos -256
 }
 Output {
  name Output1
  xpos -641
  ypos -156
 }
end_group
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 name Shuffle3
 label "\[value in1] -> \[value out1]"
 selected true
 xpos -8365
 ypos 6454
}
Ramp {
 output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
 replace true
 p0 {920 735}
 p1 {4700 700}
 name Ramp1
 selected true
 xpos -8365
 ypos 6498
}
Colorspace {
 colorspace_in HSV
 name Colorspace1
 selected true
 xpos -8365
 ypos 6534
}
Grade {
 whitepoint 0.04
 unpremult -rgba.alpha
 name Grade1
 selected true
 xpos -8365
 ypos 6614
}
set N68ed400 [stack 0]
Dot {
 name Dot19
 selected true
 xpos -8195
 ypos 6617
}
set N7a2d800 [stack 0]
Group {
 name X_Aton_Volumetrics
 knobChanged "n = nuke.thisNode()\nif n\[\"use_3d\"].value()==1:\n    n\[\"center\"].setEnabled(False)\nelse:\n    n\[\"center\"].setEnabled(True)\nn\[\"iterations\"].setValue(int(n\[\"iterations\"].value()))\nif n\[\"mode\"].value()==\"Diffuse\":\n    n\[\"diffuse\"].setEnabled(True)\nelse:\n    n\[\"diffuse\"].setEnabled(False)\nn\[\"diffuse\"].setValue(max(n\[\"diffuse\"].value(),0))\nn\[\"iterations\"].setValue(max(n\[\"iterations\"].value(),1))"
 tile_color 0xcc804eff
 note_font_color 0xffffffff
 selected true
 xpos -8229
 ypos 6768
 addUserKnob {20 X_Aton}
 addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
 addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
 addUserKnob {26 ""}
 addUserKnob {12 center t "The point from which rays will be emitted."}
 center {{parent.DiffusionRays.pos} {parent.DiffusionRays.pos}}
 addUserKnob {6 use_3d l "use 3d input" t "Use a <b>3D light</b> and a <b>3D camera</b> to calculate the center of the light. When enabled the <b>center</b> parameter will be disabled. Make sure both inputs (Light and Camera) are connected in order for this to work properly." -STARTLINE}
 addUserKnob {7 length t "This controls zoom of the final iteration. A value of 0 won't have any effect. A value of -1 will converge all rays in the centre point. All positive values will create rays projected outwards." R 0 10}
 length 8.4
 addUserKnob {26 ""}
 addUserKnob {4 mode t "- <b>Regular</b>, old school God Ray algorithm. All samples get added together. Fast and simple.\n- <b>Brighter</b>, samples only contribute to the ray if they are brighter than the ray at that step. This creates unshadowed rays.\n- <b>Darker</b>, samples only contribute to the ray if they are darker than the say at that step. This generate only shadow rays.\n- <b>Diffused</b>, different model of ray generation where rays can defocus as they travel further. This is more expensive but often generates more natural results." M {Regular Darkest Brightest Diffuse ""}}
 mode Diffuse
 addUserKnob {7 decay t "The rate by which rays loose intensity and become darker. At 0 rays intensity will remain constant. Values between 1 and 2 generate realistic results. Denser atmospheres create shorter rays (more decay)." R 0 10}
 decay 1
 addUserKnob {7 diffuse t "This parameter is only enabled when <b>Diffuse</b> is selected as the <b>mode</b>.<br>Controls the rate of dispersion of the ray of light. Higher values create softer results. <br>Keep in mind in the real world this value is dependent on the shape of the light source. Wide light sources (like a campfire) generate very diffused rays, whereas concentrated lights (like a cellphone light) cast very sharp light rays. <br>The speed of the algorithm is independent of the value of diffusion." R 0 100}
 diffuse 200
 addUserKnob {26 ""}
 addUserKnob {18 multiply t "Makes everything brighter or darker in a linear fashion." R 0.2 4}
 multiply 1
 addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 gamma t "This works slightly different than just a regular gamma. This is both a pre-process and a post-process.\n\nFirst, the image gets applied the inverse of the gamma. After the rays have been generated, the value of gamma gets applied again.\n\nWith a little bit of practise this allows you to drive the colours of the rays as they decay." R 0.2 4}
 gamma 1
 addUserKnob {6 gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {7 iterations t "The number of steps the light ray will take. The more <b>iterations</b>, the softer the ray will be. It is a good practice to raise this value to a high number (100-500) and gradually decreasing it until artifacts start to appear. Sometimes artifacts can be fixed in a more optimized way by keeping iterations low and enabling <b>bilinear interpolation</b>.<br>The more iterations, the slower the algorithm." R 1 100}
 iterations 100
 addUserKnob {6 bilinear_interpolation l "bilinear interpolation" t "By default each ray will sample the nearest pixel from the image. This often causes grid artifacts. Enabling this filtering should fix most of these issues. If it's not enough, you may need to increase the number of <b>iterations</b>. This is usually only needed when using <b>Diffuse</b> rays, altough the option is also available for the rest of modes." +STARTLINE}
 addUserKnob {6 normalize l "normalize luma" t "Many settings can affect the final brightness of the rays: their length, their decay, the number of iterations,etc.\n\nThis tries to make the controls more intuitive by compensating those brightness changes. You can disable this to have a more direct control of the tool." -STARTLINE}
 normalize true
 addUserKnob {26 ""}
 addUserKnob {20 GPU_Settings l "GPU Settings"}
 addUserKnob {20 about l About}
 addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier Martín © 2017</b>"}
 addUserKnob {26 ""}
 addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
 addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
 addUserKnob {22 version l <center>version</center> T "nuke.message('X_Aton Gizmo <i>v1.1</i><br><b>Xavier Martín © 2017</b>')" +STARTLINE}
 addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/blink/filter/x_aton\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_aton/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
 Input {
  inputs 0
  name Input
  xpos -740
  ypos -558
 }
 Dot {
  name Dot3
  xpos -706
  ypos -506
 }
set N9085c400 [stack 0]
 Remove {
  operation keep
  channels rgba
  name Remove1
  xpos -740
  ypos -460
 }
 Gamma {
  channels rgb
  value {{1/parent.gamma} {1/parent.gamma} {1/parent.gamma} 1}
  name Gamma1
  xpos -740
  ypos -410
 }
set Naabab800 [stack 0]
 Dot {
  name Dot2
  xpos -706
  ypos -356
 }
set Naabab400 [stack 0]
 Dot {
  name Dot1
  xpos -706
  ypos -306
 }
set Naabab000 [stack 0]
push $Naabab400
 Blur {
  channels rgba
  size {{diffuse*sqrt(length)}}
  name Blur5
  xpos -240
  ypos -313
 }
 CopyBBox {
  inputs 2
  name CopyBBox2
  xpos -240
  ypos -258
 }
 Reformat {
  type scale
  scale 0.125
  pbb true
  name Reformat1
  xpos -240
  ypos -210
 }
set Naabaa400 [stack 0]
push $Naabab000
push $Naabab400
 Blur {
  channels rgba
  size {{parent.Blur5.size/2}}
  name Blur4
  xpos -340
  ypos -310
 }
 CopyBBox {
  inputs 2
  name CopyBBox3
  xpos -340
  ypos -258
 }
 Reformat {
  type scale
  scale 0.25
  pbb true
  name Reformat5
  xpos -340
  ypos -210
 }
set Naaba9400 [stack 0]
push $Naabab000
push $Naabab400
 Blur {
  channels rgba
  size {{parent.Blur4.size/2}}
  name Blur3
  xpos -440
  ypos -310
 }
 CopyBBox {
  inputs 2
  name CopyBBox4
  xpos -440
  ypos -258
 }
 Reformat {
  type scale
  scale 0.5
  pbb true
  name Reformat4
  xpos -440
  ypos -210
 }
set Naaba8400 [stack 0]
push $Naabab000
push $Naabab400
 Blur {
  channels rgba
  size {{parent.Blur3.size/2}}
  name Blur2
  xpos -540
  ypos -310
 }
 CopyBBox {
  inputs 2
  name CopyBBox5
  xpos -540
  ypos -258
 }
 Reformat {
  type scale
  scale 0.6
  pbb true
  name Reformat3
  xpos -540
  ypos -210
 }
set Naab57000 [stack 0]
push $Naabab000
push $Naabab400
 Blur {
  channels rgb
  size {{parent.Blur2.size/2}}
  name Blur1
  xpos -640
  ypos -310
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -640
  ypos -258
 }
 Reformat {
  type scale
  scale 0.8
  pbb true
  name Reformat2
  xpos -640
  ypos -210
 }
set Naab56000 [stack 0]
push $Naabab000
 BlinkScript {
  inputs 6
  ProgramGroup 1
  KernelDescription "2 \"X_Aton\" iterate componentWise 5140e5ada3150b5b17997b391784be72a8515242eff97b63a728e1d29924494f 7 \"src\" Read Random \"blr1\" Read Random \"blr2\" Read Random \"blr3\" Read Random \"blr4\" Read Random \"blr5\" Read Random \"dst\" Write Point 5 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== 5 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
  kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr1; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr2; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr3; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr4; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr5; // the input image\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(normalize_output == 1) \{\n      normal =0.0;\n      for (int i = 0; i < iterations; i++) \{\n        normal += (pow(1.0f-float(i)/iterations,decay));\n      \}\n    \}\n    else \{\n      normal = iterations;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n \n    float step = 0.0;\n    for (int i = 0; i < iterations; i++) \{\n      step = float(i)/iterations;\n      scale = 1+size*step*step;\n      posx = ((currentpos.x)/scale+center.x);\n      posy = ((currentpos.y)/scale+center.y);\n      if (step < 0.1)\n        total += bilinear(src,posx,posy)*pow((1-step),decay);\n      else if (step < 0.2)\n        total += bilinear(blr1,posx*0.8,posy*0.8)*pow((1-step),decay);\n      else if (step < 0.4)\n        total += bilinear(blr2,posx*0.6,posy*0.6)*pow((1-step),decay);\n      else if (step < 0.6)\n        total += bilinear(blr3,posx*0.5,posy*0.5)*pow((1-step),decay);\n      else if (step < 0.8)\n        total += bilinear(blr4,posx*0.25,posy*0.25)*pow((1-step),decay);\n      else\n        total += bilinear(blr5,posx*0.125,posy*0.125)*pow((1-step),decay);\n    \}\n    dst() = total/normal;\n  \}\n\};"
  useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
  rebuild ""
  X_Aton_size {{parent.length}}
  X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
  X_Aton_iterations {{parent.iterations}}
  X_Aton_decay {{parent.decay}}
  X_Aton_normalize_output {{parent.normalize}}
  rebuild_finalise ""
  name BlinkScript2
  xpos -640
  ypos -116
 }
push $Naabaa400
push $Naaba9400
push $Naaba8400
push $Naab57000
push $Naab56000
push $Naabab000
 BlinkScript {
  inputs 6
  ProgramGroup 1
  KernelDescription "2 \"X_Aton\" iterate componentWise e94f08f291fbc4837d066b1a66504220d926ab715f7f89378491e8b275e0f94c 7 \"src\" Read Random \"blr1\" Read Random \"blr2\" Read Random \"blr3\" Read Random \"blr4\" Read Random \"blr5\" Read Random \"dst\" Write Point 5 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== 5 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
  kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr1; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr2; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr3; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr4; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr5; // the input image\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(normalize_output == 1) \{\n      normal =0.0;\n      for (int i = 0; i < iterations; i++) \{\n        normal += (pow(1.0f-float(i)/iterations,decay));\n      \}\n    \}\n    else \{\n      normal = iterations;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n \n    float step = 0.0;\n    for (int i = 0; i < iterations; i++) \{\n      step = float(i)/iterations;\n      scale = 1+size*step*step;\n      posx = ((currentpos.x)/scale+center.x);\n      posy = ((currentpos.y)/scale+center.y);\n      if (step < 0.1)\n        total += src(posx,posy)*pow((1-step),decay);\n      else if (step < 0.2)\n        total += blr1((posx*0.8),(posy*0.8))*pow((1-step),decay);\n      else if (step < 0.4)\n        total += blr2((posx*0.6),(posy*0.6))*pow((1-step),decay);\n      else if (step < 0.6)\n        total += blr3((posx*0.5),(posy*0.5))*pow((1-step),decay);\n      else if (step < 0.8)\n        total += blr4((posx*0.25),(posy*0.25))*pow((1-step),decay);\n      else\n        total += blr5((posx*0.125),(posy*0.125))*pow((1-step),decay);\n    \}\n    dst() = total/normal;\n  \}\n\};"
  rebuild ""
  X_Aton_size {{length}}
  X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
  X_Aton_iterations {{iterations}}
  X_Aton_decay {{decay}}
  X_Aton_normalize_output {{normalize}}
  rebuild_finalise ""
  name BlinkScript1
  onCreate "n = nuke.thisNode()\nn\[\"X_Aton_center\"].setFlag(0x00008000)"
  xpos -740
  ypos -116
 }
 Switch {
  inputs 2
  which {{parent.bilinear_interpolation}}
  name Switch2
  xpos -740
  ypos -60
 }
push $Naabab800
 Dot {
  name Dot6
  xpos -806
  ypos -406
 }
 Dot {
  name Dot8
  xpos -806
  ypos -156
 }
set Naab54800 [stack 0]
 Dot {
  name Dot7
  xpos -906
  ypos -156
 }
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"X_Aton\" iterate componentWise 487f2268501f808ca51782f791e12713f7866399dc695919d23851a93187e87b 2 \"src\" Read Random \"dst\" Write Point 6 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== 6 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 \"mode\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
  kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n    int mode;\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(mode==0) \{\n      if(normalize_output == 1) \{\n        normal =0.0;\n        for (int i = 0; i < iterations; i++) \{\n          normal += (pow(1.0f-float(i)/iterations,decay));\n        \}\n      \}\n      else \{\n        normal = iterations;\n      \}\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0f;\n    float scale = 0.0f;\n    float posx = 0.0f;\n    float posy = 0.0f;\n    float2 currentpos = float2(pos.x-center.x,pos.y-center.y);\n\n    if(mode==0)\{\n      for (int i = 0; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        total += bilinear(src,posx,posy)*pow((1-float(i)/iterations),decay);\n      \}\n      dst() = total/normal;\n    \}\n    else if(mode==1)\{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = bilinear(src,posx,posy);\n        if(sample<total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += 1.0*pow((1-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n    else \{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = bilinear(src,posx,posy);\n        if(sample>total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += 1.0*pow((1-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n  \}\n\};\n"
  useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
  rebuild ""
  X_Aton_size {{length}}
  X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
  X_Aton_iterations {{iterations}}
  X_Aton_decay {{decay}}
  X_Aton_normalize_output {{normalize}}
  X_Aton_mode {{(parent.mode!=3)?parent.mode:parent.mode*(parent.diffuse!=0)}}
  rebuild_finalise ""
  name BlinkScript4
  xpos -940
  ypos -116
 }
push $Naab54800
 BlinkScript {
  ProgramGroup 1
  KernelDescription "2 \"X_Aton\" iterate componentWise 8ab15b8bdd9694a8f64ba7270da748947d286719d2fadccab9e45b58ec1aa1dd 2 \"src\" Read Random \"dst\" Write Point 6 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== 6 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 \"mode\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
  kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n    int mode;\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(mode==0) \{\n      if(normalize_output == 1) \{\n        normal =0.0;\n        for (int i = 0; i < iterations; i++) \{\n          normal += (pow(1.0f-float(i)/iterations,decay));\n        \}\n      \}\n      else \{\n        normal = iterations;\n      \}\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n\n    if(mode==0)\{\n      for (int i = 0; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        total += src(posx,posy)*pow((1-float(i)/iterations),decay);\n      \}\n      dst() = total/normal;\n    \}\n    else if(mode==1)\{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = src(posx,posy);\n        if(sample<total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += pow((1.0f-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n    else \{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = src(posx,posy);\n        if(sample>total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += pow((1.0f-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n  \}\n\};\n"
  useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
  rebuild ""
  X_Aton_size {{length}}
  X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
  X_Aton_iterations {{iterations}}
  X_Aton_decay {{decay}}
  X_Aton_normalize_output {{normalize}}
  X_Aton_mode {{(parent.mode!=3)?parent.mode:parent.mode*(parent.diffuse!=0)}}
  rebuild_finalise ""
  name BlinkScript3
  xpos -840
  ypos -116
 }
 Switch {
  inputs 2
  which {{parent.bilinear_interpolation}}
  name Switch3
  xpos -840
  ypos -60
 }
 Switch {
  inputs 2
  which {{(mode==3)*(diffuse!=0)}}
  name Switch1
  xpos -740
  ypos -10
 }
 Grade {
  multiply {{1/parent.multiply} {1/parent.multiply} {1/parent.multiply} 1}
  gamma {{1/parent.gamma} {1/parent.gamma} {1/parent.gamma} 1}
  reverse true
  name Grade1
  xpos -740
  ypos 40
 }
push $N9085c400
 Dot {
  name Dot5
  xpos -1006
  ypos -506
 }
 Dot {
  name Dot4
  xpos -1006
  ypos 94
 }
 Merge2 {
  inputs 2
  operation copy
  name Merge1
  xpos -740
  ypos 88
 }
 Output {
  name Output1
  xpos -740
  ypos 140
 }
 Input {
  inputs 0
  name InputLight
  xpos -540
  ypos -560
  number 1
 }
 Input {
  inputs 0
  name InputCamera
  xpos -440
  ypos -560
  number 2
 }
 Dot {
  name Dot11
  xpos -406
  ypos -456
 }
push $N9085c400
 Dot {
  name Dot9
  xpos -606
  ypos -506
 }
 Dot {
  name Dot10
  xpos -606
  ypos -456
 }
 Reconcile3D {
  inputs 3
  calc_output true
  name Reconcile3D1
  xpos -540
  ypos -466
 }
end_group
push $N68ed400
Group {
 name DiffusionRays
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"use_3d\":\n        if k.value():\n            n.knob('pos').setFlag(nuke.DISABLED)\n            n.begin()\n            nuke.toNode('Reconcile3D').knob('calc_output').setValue(True)\n            n.end()\n         \n        if not k.value():\n            n.knob('pos').clearFlag(nuke.DISABLED)\n            n.begin()\n            nuke.toNode('Reconcile3D').knob('calc_output').setValue(False)\n            n.end()\n         "
 selected true
 xpos -8365
 ypos 6772
 addUserKnob {20 diffusion_rays l "Diffusion Rays"}
 addUserKnob {26 title l "" +STARTLINE T "<font size=\"+5\"> Diffusion Rays"}
 addUserKnob {26 version_plug l "" +STARTLINE T "<font style=\"color: #666666;\">v1.1 | <a href=\"https://www.linkedin.com/in/petejans/\" style=\"color: #6786b8;\">Peter Jansen</a> | <a href=\"https://github.com/Peter-Jansen\" style=\"color: #6786b8;\">Github</a>"}
 addUserKnob {26 ""}
 addUserKnob {12 pos}
 pos {{curve x1043 -786.9482422 x1071 6413.051758} {curve x1043 2154.143066}}
 addUserKnob {6 use_3d l "Use 3d" -STARTLINE}
 addUserKnob {26 text_1 l <b>Look}
 addUserKnob {7 length R 1 10}
 length 2.65
 addUserKnob {7 diffusion R 0 2}
 diffusion 0.1
 addUserKnob {41 white l "from colour" T from_colour.white}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 from_colour_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 color_rgba_panelDropped true
 addUserKnob {6 to_colour_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 color_rgba_1_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {41 white_1 l "to colour" T to_colour.white}
 addUserKnob {26 text l <b>Quality}
 addUserKnob {3 steps}
 steps 100
 addUserKnob {7 vec_blur l "blur stepping"}
 vec_blur 0.5
 addUserKnob {7 downscale}
 downscale 0.35
 addUserKnob {7 overscan l "overscan %" R 0 100}
 overscan 10
 addUserKnob {26 ""}
}
 Input {
  inputs 0
  name img
  xpos -346
  ypos 8
 }
 Dot {
  name Dot3
  xpos -312
  ypos 161
 }
set N68ecc00 [stack 0]
 Dot {
  name Dot5
  xpos 124
  ypos 161
 }
 Crop {
  box {0 0 {img.width} {img.height}}
  name Crop1
  xpos 90
  ypos 423
 }
 AdjBBox {
  numpixels {{(width*parent.overscan/100)} {(height*parent.overscan/100)}}
  name OVERSCAN
  xpos 90
  ypos 702
 }
set N6c67c00 [stack 0]
 Reformat {
  type scale
  scale {{"max(parent.downscale, .1)"}}
  pbb true
  name DOWNSCALE
  xpos -13
  ypos 757
 }
 set C6c67800 [stack 0]
set N6c67800 [stack 0]
 Dot {
  name Dot62
  xpos 21
  ypos 968
 }
push $N6c67c00
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  name Expression2
  xpos 90
  ypos 833
 }
 Transform {
  scale 1.02
  center {{"use_3d? Reconcile3D.output : pos"} {"use_3d? Reconcile3D.output : pos"}}
  name Transform2
  xpos 90
  ypos 881
 }
clone $C6c67800 {
  xpos 90
  ypos 916
  selected false
 }
 CopyBBox {
  inputs 2
  name CopyBBox4
  xpos 90
  ypos 965
 }
 Expression {
  expr0 (r-(x+0.5)/width)*width
  expr1 (g-(y+0.5)/height)*height
  expr2 0
  name UV_to_Vector2
  xpos 90
  ypos 1031
 }
push $N6c67800
push $N68ecc00
 NoTimeBlur {
  name NoTimeBlur1
  xpos -346
  ypos 238
 }
 Transform {
  scale {{"lerp( 0,1,1, parent.length, pow(fmod(frame,1), (diffusion*3)+1) )"}}
  center {{"use_3d? Reconcile3D.output : pos"} {"use_3d? Reconcile3D.output : pos"}}
  name Transform4
  xpos -346
  ypos 292
 }
clone $C6c67800 {
  xpos -346
  ypos 340
  selected false
 }
 Blur {
  size {{"lerp( 0,0,1, diffusion, pow(fmod(frame,1), (diffusion*3)+1) ) * hypot(img.width,img.height) * downscale"}}
  name Blur3
  xpos -346
  ypos 378
 }
 Dot {
  name Dot4
  xpos -312
  ypos 490
 }
set N6c17c00 [stack 0]
 Grade {
  white 0
  unpremult -rgba.alpha
  name to_colour
  xpos -247
  ypos 554
 }
push $N6c17c00
 Grade {
  unpremult -rgba.alpha
  name from_colour
  xpos -454
  ypos 554
 }
 Dissolve {
  inputs 2
  which {{fmod(frame,1)}}
  name Dissolve1
  xpos -346
  ypos 628
 }
 TimeBlur {
  divisions {{steps}}
  shutter 1
  shutteroffset end
  shuttercustomoffset 0
  name TimeBlur1
  xpos -346
  ypos 685
 }
 CopyBBox {
  inputs 2
  name CopyBBox5
  xpos -346
  ypos 757
 }
 Dot {
  name Dot1
  xpos -312
  ypos 1139
 }
set N6c16400 [stack 0]
 Shuffle2 {
  inputs 2
  fromInput1 {{1} B A}
  out1 motion
  fromInput2 {{0} B A}
  mappings "4 rgba.red 0 0 forward.u 0 0 rgba.green 0 1 forward.v 0 1 rgba.blue 0 2 backward.u 0 2 rgba.alpha 0 3 backward.v 0 3"
  name Shuffle27
  label "\[value in1] -> \[value out1]"
  xpos 90
  ypos 1130
 }
 VectorBlur {
  uv motion
  scale {{vec_blur}}
  offset -1
  name VectorBlur4
  xpos 90
  ypos 1202
 }
 Dot {
  name Dot2
  xpos 124
  ypos 1317
 }
push $N6c16400
 Switch {
  inputs 2
  which {{"vec_blur > 0"}}
  name Switch1
  xpos -346
  ypos 1314
 }
 Reformat {
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  filter Mitchell
  pbb true
  name Reformat3
  xpos -346
  ypos 1410
 }
 Output {
  name Output1
  xpos -346
  ypos 1524
 }
 Input {
  inputs 0
  name Axis
  xpos -1034
  ypos 91
  number 2
 }
 NoTimeBlur {
  name NoTimeBlur3
  xpos -1034
  ypos 131
 }
 Input {
  inputs 0
  name Camera
  xpos -883
  ypos 15
  number 1
 }
 NoTimeBlur {
  name NoTimeBlur2
  xpos -883
  ypos 102
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  name Reformat22
  xpos -719
  ypos 104
 }
 Reconcile3D {
  inputs 3
  name Reconcile3D
  xpos -883
  ypos 174
 }
end_group
Axis3 {
 inputs 0
 translate {0 0 3.819999933}
 name Axis2
 selected true
 xpos -8957
 ypos 6610
}
set N65cb6000 [stack 0]
push $cut_paste_input
Axis3 {
 rotate {0 {frame*10} 0}
 name Axis1
 selected true
 xpos -9249
 ypos 6494
}
Camera3 {
 translate {13.80237675 1.481440663 13.7133131}
 rotate {-5.948443765 45.97492538 0}
 name Camera2
 label "\[basename \[value file]]"
 selected true
 xpos -9249
 ypos 6630
}
set N65cb6c00 [stack 0]
Constant {
 inputs 0
 channels rgb
 name Constant4
 selected true
 xpos -8832
 ypos 6527
}
set Nb0a44c00 [stack 0]
Reconcile3D {
 inputs 3
 calc_output true
 name Reconcile3D1
 selected true
 xpos -8809
 ypos 6668
}
push $N65cb6000
NoTimeBlur {
 name NoTimeBlur2
 selected true
 xpos -8967
 ypos 6721
}
push $N65cb6c00
NoTimeBlur {
 name NoTimeBlur1
 selected true
 xpos -9259
 ypos 6725
}
push $N65cb6c00
Constant {
 inputs 0
 color 1
 name Constant3
 selected true
 xpos -9160
 ypos 6370
}
set N65cb7400 [stack 0]
Sphere {
 translate {1.450000048 -0.76999997 0}
 uniform_scale 0.4
 name Sphere1
 selected true
 xpos -9057
 ypos 6524
}
push $N65cb7400
Grid {
 number 4
 size 100
 color 0
 name Grid1
 selected true
 xpos -9160
 ypos 6480
}
Card2 {
 image_aspect false
 scaling {1 1.6 1}
 control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
 name Card5
 selected true
 xpos -9160
 ypos 6521
}
Scene {
 inputs 2
 name Scene4
 selected true
 xpos -9150
 ypos 6561
}
push 0
ScanlineRender {
 inputs 3
 conservative_shader_sampling false
 shutteroffset centred
 motion_vectors_type off
 name ScanlineRender6
 selected true
 xpos -9160
 ypos 6651
}
NoTimeBlur {
 name NoTimeBlur3
 selected true
 xpos -9160
 ypos 6735
}
Group {
 inputs 3
 name DiffusionRays1
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"use_3d\":\n        if k.value():\n            n.knob('pos').setFlag(nuke.DISABLED)\n            n.begin()\n            nuke.toNode('Reconcile3D').knob('calc_output').setValue(True)\n            n.end()\n         \n        if not k.value():\n            n.knob('pos').clearFlag(nuke.DISABLED)\n            n.begin()\n            nuke.toNode('Reconcile3D').knob('calc_output').setValue(False)\n            n.end()\n         "
 selected true
 xpos -9160
 ypos 6817
 addUserKnob {20 diffusion_rays l "Diffusion Rays"}
 addUserKnob {26 title l "" +STARTLINE T "<font size=\"+5\"> Diffusion Rays"}
 addUserKnob {26 version_plug l "" +STARTLINE T "<font style=\"color: #666666;\">v1.1 | <a href=\"https://www.linkedin.com/in/petejans/\" style=\"color: #6786b8;\">Peter Jansen</a> | <a href=\"https://github.com/Peter-Jansen\" style=\"color: #6786b8;\">Github</a>"}
 addUserKnob {26 ""}
 addUserKnob {12 pos +DISABLED}
 addUserKnob {6 use_3d l "Use 3d" -STARTLINE}
 use_3d true
 addUserKnob {26 text_1 l <b>Look}
 addUserKnob {7 length R 1 10}
 length 5
 addUserKnob {7 diffusion R 0 2}
 diffusion 0.2
 addUserKnob {41 white l "from colour" T from_colour.white}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 from_colour_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 color_rgba_panelDropped true
 addUserKnob {6 to_colour_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 color_rgba_1_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {41 white_1 l "to colour" T to_colour.white}
 addUserKnob {26 text l <b>Quality}
 addUserKnob {3 steps}
 steps 100
 addUserKnob {7 vec_blur l "blur stepping"}
 vec_blur 0.5
 addUserKnob {7 downscale}
 downscale 0.35
 addUserKnob {7 overscan l "overscan %" R 0 100}
 overscan 10
 addUserKnob {26 ""}
}
 Input {
  inputs 0
  name img
  xpos -346
  ypos 8
 }
 Dot {
  name Dot3
  xpos -312
  ypos 161
 }
set N65cb5000 [stack 0]
 Dot {
  name Dot5
  xpos 124
  ypos 161
 }
 Crop {
  box {0 0 {img.width} {img.height}}
  name Crop1
  xpos 90
  ypos 423
 }
 AdjBBox {
  numpixels {{(width*parent.overscan/100)} {(height*parent.overscan/100)}}
  name OVERSCAN
  xpos 90
  ypos 702
 }
set N65cb4400 [stack 0]
 Reformat {
  type scale
  scale {{"max(parent.downscale, .1)"}}
  pbb true
  name DOWNSCALE
  xpos -13
  ypos 757
 }
 set C73c71000 [stack 0]
set N73c71000 [stack 0]
 Dot {
  name Dot62
  xpos 21
  ypos 968
 }
push $N65cb4400
 Expression {
  expr0 (x+0.5)/width
  expr1 (y+0.5)/height
  name Expression2
  xpos 90
  ypos 833
 }
 Transform {
  scale 1.02
  center {{"use_3d? Reconcile3D.output : pos"} {"use_3d? Reconcile3D.output : pos"}}
  name Transform2
  xpos 90
  ypos 881
 }
clone $C73c71000 {
  xpos 90
  ypos 916
  selected false
 }
 CopyBBox {
  inputs 2
  name CopyBBox4
  xpos 90
  ypos 965
 }
 Expression {
  expr0 (r-(x+0.5)/width)*width
  expr1 (g-(y+0.5)/height)*height
  expr2 0
  name UV_to_Vector2
  xpos 90
  ypos 1031
 }
push $N73c71000
push $N65cb5000
 NoTimeBlur {
  name NoTimeBlur1
  xpos -346
  ypos 238
 }
 Transform {
  scale {{"lerp( 0,1,1, parent.length, pow(fmod(frame,1), (diffusion*3)+1) )"}}
  center {{"use_3d? Reconcile3D.output : pos"} {"use_3d? Reconcile3D.output : pos"}}
  name Transform4
  xpos -346
  ypos 292
 }
clone $C73c71000 {
  xpos -346
  ypos 340
  selected false
 }
 Blur {
  size {{"lerp( 0,0,1, diffusion, pow(fmod(frame,1), (diffusion*3)+1) ) * hypot(img.width,img.height) * downscale"}}
  name Blur3
  xpos -346
  ypos 378
 }
 Dot {
  name Dot4
  xpos -312
  ypos 490
 }
set Nc0e66c00 [stack 0]
 Grade {
  unpremult -rgba.alpha
  name to_colour
  xpos -247
  ypos 554
 }
push $Nc0e66c00
 Grade {
  unpremult -rgba.alpha
  name from_colour
  xpos -454
  ypos 554
 }
 Dissolve {
  inputs 2
  which {{fmod(frame,1)}}
  name Dissolve1
  xpos -346
  ypos 628
 }
 TimeBlur {
  divisions {{steps}}
  shutter 1
  shutteroffset end
  shuttercustomoffset 0
  name TimeBlur1
  xpos -346
  ypos 685
 }
 CopyBBox {
  inputs 2
  name CopyBBox5
  xpos -346
  ypos 757
 }
 Dot {
  name Dot1
  xpos -312
  ypos 1139
 }
set N746adc00 [stack 0]
 Shuffle2 {
  inputs 2
  fromInput1 {{1} B A}
  out1 motion
  fromInput2 {{0} B A}
  mappings "4 rgba.red 0 0 forward.u 0 0 rgba.green 0 1 forward.v 0 1 rgba.blue 0 2 backward.u 0 2 rgba.alpha 0 3 backward.v 0 3"
  name Shuffle27
  label "\[value in1] -> \[value out1]"
  xpos 90
  ypos 1130
 }
 VectorBlur {
  uv motion
  scale {{vec_blur}}
  offset -1
  name VectorBlur4
  xpos 90
  ypos 1202
 }
 Dot {
  name Dot2
  xpos 124
  ypos 1317
 }
push $N746adc00
 Switch {
  inputs 2
  which {{"vec_blur > 0"}}
  name Switch1
  xpos -346
  ypos 1314
 }
 Reformat {
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  filter Mitchell
  pbb true
  name Reformat3
  xpos -346
  ypos 1410
 }
 Output {
  name Output1
  xpos -346
  ypos 1524
 }
 Input {
  inputs 0
  name Axis
  xpos -1034
  ypos 91
  number 2
 }
 NoTimeBlur {
  name NoTimeBlur3
  xpos -1034
  ypos 131
 }
 Input {
  inputs 0
  name Camera
  xpos -883
  ypos 15
  number 1
 }
 NoTimeBlur {
  name NoTimeBlur2
  xpos -883
  ypos 102
 }
 Reformat {
  inputs 0
  type "to box"
  box_width {{img.width}}
  box_height {{img.height}}
  box_fixed true
  name Reformat22
  xpos -719
  ypos 104
 }
 Reconcile3D {
  inputs 3
  calc_output true
  name Reconcile3D
  selected true
  xpos -883
  ypos 174
 }
end_group
Grade {
 channels rgba
 whitepoint 0.9
 gamma 1.2
 unpremult -rgba.alpha
 name Grade15
 selected true
 xpos -8882
 ypos 6847
}
push $Nb0a44c00
Flare {
 position {{parent.Reconcile3D1.output} {parent.Reconcile3D1.output}}
 size_mult 0.4
 name Flare1
 selected true
 xpos -8690
 ypos 6669
}
Group {
 name Glow_Exponential1
 help "Exponential Glow node, with options to recolor and adjust falloff."
 knobChanged "\nk = nuke.thisKnob()\nif k.name()=='crop':\n    if k.value():\n        nuke.thisNode().knob('overscan').setEnabled(True)\n    else:\n        nuke.thisNode().knob('overscan').setEnabled(False)\n"
 tile_color 0xc97200ff
 selected true
 xpos -8690
 ypos 6741
 addUserKnob {20 ge l Glow}
 addUserKnob {26 glow_ctrls l "@b;Glow:"}
 addUserKnob {7 size t "Size of the glow" R 0 100}
 size 90
 addUserKnob {7 intensity t "Brightness of the Glow" R 0 10}
 intensity 240
 addUserKnob {7 falloff t "Adjust the light falloff of the glow. Higher values will have a longer falloff, resulting in visually bigger glows."}
 falloff 1
 addUserKnob {26 glow_highlights l "@b;Highlights:"}
 addUserKnob {41 range t "Luma key to define which parts of the image will glow." T Keyer1.range}
 addUserKnob {26 glow_colors l "@b;Glow Colors:"}
 addUserKnob {7 saturation l "color from img" t "By default the glow takes on the colors of the plate. By using this knob you can desaturate the color of the glow."}
 saturation 1
 addUserKnob {18 core_color l "core re-color" t "Re-color the core of the glow. Use the core threshold to define which parts of the glow are core or falloff."}
 core_color {1 1 1}
 addUserKnob {6 core_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 falloff_color l "falloff re-color" t "Re-color the falloff of the glow. Use the core threshold to define which parts of the glow are core or falloff."}
 falloff_color {1 1 1}
 addUserKnob {6 falloff_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 threshold l "core threshold" t "Define which parts of the glow are core or falloff."}
 threshold 1
 addUserKnob {26 glow_options l "@b;Options:"}
 addUserKnob {14 aspect l "aspect ratio" t "Set the aspect ratio for your glow. Streaky results can be obtained by changing the ratio here." R 0 100}
 aspect {1 1}
 addUserKnob {6 glow_only l "Glow only" t "By default the glow is added onto the plate. Checking this box will output the glow only. " +STARTLINE}
 addUserKnob {6 crop l "Crop to Format" t "This glow can expand the bounding box to massive values, checking this box can prevent your bbox from getting unmanageable." +STARTLINE}
 crop true
 addUserKnob {7 overscan l "overscan (%)" t "If you are cropping to format but originally had some values outside the format, you can add some overscan here to preserve these. The values are a percentage of the format size." R 0 100}
 overscan 10
 addUserKnob {7 mix t "Mix back with the original plate (or black, if glow only is enabled)"}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 spin_copyright l "" t "© <b>SPIN<span style=\"color:#b32026\">VFX</span></b>\nGlow_Exponential\nVersion 1.0\n2017" +STARTLINE T "<span style=\"color:#aaa;font-family:sans-serif;font-size:8pt\"><b>SPIN<span style=\"color:#b32026\">VFX</span></b> - Version 1.0 - 2017 - <a href=\"https://github.com/SpinVFX/spin_nuke_gizmos/\" style=\"color:#aaa\">Github Page</a></span>"}
}
 Input {
  inputs 0
  name img
  xpos 0
  ypos -59
 }
 Dot {
  name Dot1
  tile_color 0xcccccc00
  xpos 34
  ypos 50
 }
set N97017400 [stack 0]
 Dot {
  name Dot24
  tile_color 0xcccccc00
  xpos 34
  ypos 1274
 }
set N97017000 [stack 0]
 Input {
  inputs 0
  name mask
  xpos 136
  ypos 158
  number 1
 }
push $N97017400
 NoOp {
  name CTRL
  xpos 304
  ypos 46
  addUserKnob {20 User}
  addUserKnob {7 falloff R 0 2}
  falloff {{"max(parent.falloff/2+0.5, 0.0001)"}}
  addUserKnob {7 falloff_intensity}
  falloff_intensity {{falloff+pow(falloff,2)+pow(falloff,3)+pow(falloff,4)+pow(falloff,5)+pow(falloff,6)+pow(falloff,7)+pow(falloff,8)+pow(falloff,9)+pow(falloff,10)}}
  addUserKnob {14 size R 0 100}
  size {{parent.size/20*parent.aspect.w} {parent.size/20*parent.aspect.h}}
  addUserKnob {7 intensity}
  intensity {{parent.intensity/falloff_intensity}}
  addUserKnob {7 core R 0 2}
  core {{threshold}}
  addUserKnob {7 core_length}
  core_length {{sqrt(pow(core_color.r,2)+pow(core_color.g,2)+pow(core_color.b,2))/sqrt(3)}}
  addUserKnob {7 falloff_length}
  falloff_length {{sqrt(pow(falloff_color.r,2)+pow(falloff_color.g,2)+pow(falloff_color.b,2))/sqrt(3)}}
 }
 Keyer {
  operation "luminance key"
  name Keyer1
  xpos 304
  ypos 98
 }
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  xpos 304
  ypos 146
  disable {{"!\[exists parent.input1] "}}
 }
 Premult {
  name Premult1
  xpos 304
  ypos 202
 }
 Remove {
  operation keep
  channels rgb
  name Remove1
  xpos 304
  ypos 228
 }
 Multiply {
  value {{parent.CTRL.intensity}}
  name Multiplyer
  xpos 304
  ypos 263
 }
 Saturation {
  saturation {{parent.saturation}}
  name Saturation1
  xpos 304
  ypos 325
 }
 Dot {
  name Dot3
  tile_color 0x7aa9ff00
  xpos 338
  ypos 372
 }
set N97014c00 [stack 0]
 Dot {
  name Dot2
  tile_color 0x7aa9ff00
  xpos 604
  ypos 372
 }
set N97014800 [stack 0]
 Dot {
  name Dot4
  tile_color 0x7aa9ff00
  xpos 870
  ypos 372
 }
set N97014400 [stack 0]
 Dot {
  name Dot5
  tile_color 0x7aa9ff00
  xpos 1136
  ypos 372
 }
set N272a3c00 [stack 0]
 Dot {
  name Dot6
  tile_color 0x7aa9ff00
  xpos 1402
  ypos 372
 }
set N272a3800 [stack 0]
 Dot {
  name Dot7
  tile_color 0x7aa9ff00
  xpos 1668
  ypos 372
 }
set N272a3400 [stack 0]
 Dot {
  name Dot8
  tile_color 0x7aa9ff00
  xpos 1934
  ypos 372
 }
set N272a3000 [stack 0]
 Dot {
  name Dot9
  tile_color 0x7aa9ff00
  xpos 2200
  ypos 372
 }
set N272a2c00 [stack 0]
 Dot {
  name Dot10
  tile_color 0x7aa9ff00
  xpos 2466
  ypos 372
 }
set N272a2800 [stack 0]
 Dot {
  name Dot11
  tile_color 0x7aa9ff00
  xpos 2732
  ypos 372
 }
 Blur {
  size {{Blur9.size*2} {Blur9.size*2}}
  crop false
  name Blur10
  xpos 2698
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,10)}}
  name Multiply10
  xpos 2698
  ypos 543
 }
 Dot {
  name Dot20
  tile_color 0x7aa9ff00
  xpos 2732
  ypos 796
 }
push $N272a2800
 Blur {
  size {{Blur8.size*2} {Blur8.size*2}}
  crop false
  name Blur9
  xpos 2432
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,9)}}
  name Multiply9
  xpos 2432
  ypos 542
 }
 Dot {
  name Dot19
  tile_color 0x7aa9ff00
  xpos 2466
  ypos 770
 }
push $N272a2c00
 Blur {
  size {{Blur7.size*2} {Blur7.size*2}}
  crop false
  name Blur8
  xpos 2166
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,8)}}
  name Multiply8
  xpos 2166
  ypos 536
 }
 Dot {
  name Dot18
  tile_color 0x7aa9ff00
  xpos 2200
  ypos 744
 }
push $N272a3000
 Blur {
  size {{Blur6.size*2} {Blur6.size*2}}
  crop false
  name Blur7
  xpos 1900
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,7)}}
  name Multiply7
  xpos 1900
  ypos 528
 }
 Dot {
  name Dot17
  tile_color 0x7aa9ff00
  xpos 1934
  ypos 718
 }
push $N272a3400
 Blur {
  size {{Blur5.size*2} {Blur5.size*2}}
  crop false
  name Blur6
  xpos 1634
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,6)}}
  name Multiply6
  xpos 1634
  ypos 528
 }
 Dot {
  name Dot16
  tile_color 0x7aa9ff00
  xpos 1668
  ypos 692
 }
push $N272a3800
 Blur {
  size {{Blur4.size*2} {Blur4.size*2}}
  crop false
  name Blur5
  xpos 1368
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,5)}}
  name Multiply5
  xpos 1368
  ypos 524
 }
 Dot {
  name Dot15
  tile_color 0x7aa9ff00
  xpos 1402
  ypos 666
 }
push $N272a3c00
 Blur {
  size {{Blur3.size*2} {Blur3.size*2}}
  crop false
  name Blur4
  xpos 1102
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,4)}}
  name Multiply4
  xpos 1102
  ypos 518
 }
 Dot {
  name Dot14
  tile_color 0x7aa9ff00
  xpos 1136
  ypos 640
 }
push $N97014400
 Blur {
  size {{Blur2.size*2} {Blur2.size*2}}
  crop false
  name Blur3
  xpos 836
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,3)}}
  name Multiply3
  xpos 836
  ypos 509
 }
 Dot {
  name Dot13
  tile_color 0x7aa9ff00
  xpos 870
  ypos 614
 }
push $N97014800
 Blur {
  size {{Blur1.size*2} {Blur1.size*2}}
  crop false
  name Blur2
  xpos 570
  ypos 440
 }
 Multiply {
  value {{pow(CTRL.falloff,2)}}
  name Multiply2
  xpos 570
  ypos 508
 }
 Dot {
  name Dot12
  tile_color 0x7aa9ff00
  xpos 604
  ypos 588
 }
push $N97014c00
 Blur {
  size {{CTRL.size*2} {CTRL.size*2}}
  crop false
  name Blur1
  xpos 304
  ypos 440
 }
 Multiply {
  value {{CTRL.falloff}}
  name Multiply1
  xpos 304
  ypos 512
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge1
  xpos 304
  ypos 584
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge2
  xpos 304
  ypos 610
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge3
  xpos 304
  ypos 636
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos 304
  ypos 662
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge5
  xpos 304
  ypos 688
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge6
  xpos 304
  ypos 714
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge7
  xpos 304
  ypos 740
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge8
  xpos 304
  ypos 766
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge9
  xpos 304
  ypos 792
 }
 Dot {
  name Dot21
  tile_color 0x4b5ec600
  xpos 338
  ypos 928
 }
set Nacddfc00 [stack 0]
 Dot {
  name Dot22
  tile_color 0x4b5ec600
  xpos 498
  ypos 928
 }
 Grade {
  whitepoint {{CTRL.core}}
  white_clamp true
  name Grade2
  xpos 464
  ypos 977
 }
 Gamma {
  channels rgb
  value {{parent.falloff_color.r/CTRL.falloff_length} {parent.falloff_color.g/CTRL.falloff_length} {parent.falloff_color.b/CTRL.falloff_length} {curve}}
  name Gamma1
  xpos 464
  ypos 1037
 }
 Grade {
  whitepoint {{CTRL.core}}
  reverse true
  name Grade3
  xpos 464
  ypos 1082
 }
push $Nacddfc00
 Clamp {
  minimum {{CTRL.core}}
  maximum_enable false
  name Clamp1
  xpos 304
  ypos 972
 }
 Grade {
  add {{1-CTRL.core}}
  name Grade4
  xpos 304
  ypos 1020
 }
 Gamma {
  channels rgb
  value {{1+(1-parent.core_color.r)/CTRL.core_length} {1+(1-parent.core_color.g)/CTRL.core_length} {1+(1-parent.core_color.b)/CTRL.core_length} {curve}}
  name Gamma2
  xpos 304
  ypos 1061
 }
 Add {
  channels rgb
  value -1
  name Add1
  xpos 304
  ypos 1087
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge10
  xpos 304
  ypos 1157
 }
 Remove {
  operation keep
  channels rgb
  name Remove2
  xpos 304
  ypos 1183
 }
 Multiply {
  value {{parent.mix}}
  name mix
  xpos 304
  ypos 1217
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge11
  xpos 304
  ypos 1270
  disable {{parent.glow_only}}
 }
 Dot {
  name Dot23
  tile_color 0x4b5ec600
  xpos 338
  ypos 1436
 }
push $N97017000
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  from2 rgba.blue
  to2 rgba.blue
  name Copy1
  xpos 0
  ypos 1414
 }
 Crop {
  box {{-width*(parent.overscan/100)/2} {-height*(parent.overscan/100)/2} {width+(width*(parent.overscan/100)/2)} {height+(height*(parent.overscan/100)/2)}}
  crop false
  name Crop2
  xpos 0
  ypos 1495
  disable {{!parent.crop}}
 }
 Output {
  name Output1
  xpos 0
  ypos 1543
 }
end_group
Grade {
 whitepoint 0.27
 gamma 1.5
 unpremult -rgba.alpha
 name Grade10
 selected true
 xpos -8690
 ypos 6779
}
Merge2 {
 inputs 2
 operation stencil
 name Merge10
 selected true
 xpos -8690
 ypos 6947
}
push $N7a2d800
Dot {
 name Dot18
 selected true
 xpos -8063
 ypos 6617
}
VolumeRays {
 name VolumeRays1
 label "Mar 20 2005"
 selected true
 xpos -8097
 ypos 6770
 vol_pos {{parent.DiffusionRays.pos} {parent.DiffusionRays.pos}}
 quality High
 volume_end_color {0 0 0 0}
 chk_radial false
}
